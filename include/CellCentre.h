#ifndef CELLCENTRE
#define CELLCENTRE

#include <vector>

#include "InterpolationData.h"

//------------------------------------------------------------------------------------------------------------------------------------------------------
/// @file CellCentre.h
/// @brief Structure for cell centre. This contains data that will have to be updated for each step as grid doesn't store data, only uses it to do
/// calculations. Apart from the data necessary for the calculations, it also stores the particles contained in the cell and their respective interpolation
/// weights to reduce the number of loops in the data transfer operations.
/// @author Ina M. Sorensen
/// @version 1.0
/// @date 27.06.16
///
/// @todo
//------------------------------------------------------------------------------------------------------------------------------------------------------


enum State
{
  Interior,
  Colliding,
  Empty
};

struct CellCentre
{
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Store grid index
  //----------------------------------------------------------------------------------------------------------------------
  int m_iIndex;
  int m_jIndex;
  int m_kIndex;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief List of interpolation data containing particle pointer and interpolation weights
  //----------------------------------------------------------------------------------------------------------------------
  std::vector<InterpolationData*> m_interpolationData;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Collision state of cell. Is it colliding, empty or interior
  //----------------------------------------------------------------------------------------------------------------------
  State m_state;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Mass of cell
  //----------------------------------------------------------------------------------------------------------------------
  float m_mass;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Determinant of deformation gradient F
  //----------------------------------------------------------------------------------------------------------------------
  float m_detDeformationGrad;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Determinant of elastic part of deformation gradient F_E
  //----------------------------------------------------------------------------------------------------------------------
  float m_detDeformationGradElastic;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Determinant of plastic part of deformation gradient F_P
  //----------------------------------------------------------------------------------------------------------------------
  float m_detDeformationGradPlastic;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Heat capacity for cell. Used in calculating temperature of cell
  //----------------------------------------------------------------------------------------------------------------------
  float m_heatCapacity;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Cell temperature
  //----------------------------------------------------------------------------------------------------------------------
  float m_temperature;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Lambda Lame constant for cell.
  //----------------------------------------------------------------------------------------------------------------------
  float m_lambda;
};

#endif // CELLCENTRE

